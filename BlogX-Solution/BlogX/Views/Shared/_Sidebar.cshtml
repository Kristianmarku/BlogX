@inject SignInManager<UserModel> SignInManager

<!-- Sidebar -->
<ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion"
    id="accordionSidebar">
    <!-- Sidebar - Brand -->
    <a class="sidebar-brand d-flex align-items-center justify-content-center"
       asp-area="" asp-controller="Home" asp-action="Index">
        <div class="sidebar-brand-icon rotate-n-15">
            <i class="fa-solid fa-blog"></i>
        </div>
        <div class="sidebar-brand-text mx-3">Blog<sup>X</sup></div>
    </a>

    @{
        var registerActive = ViewContext.RouteData.Values.ContainsKey("page") && ViewContext.RouteData.Values["page"]!.ToString()!.Equals("/Account/Register", StringComparison.OrdinalIgnoreCase);
        var loginActive = ViewContext.RouteData.Values.ContainsKey("page") && ViewContext.RouteData.Values["page"]!.ToString()!.Equals("/Account/Login", StringComparison.OrdinalIgnoreCase);

        var dashboardActive = ViewContext.RouteData.Values.ContainsKey("controller") && ViewContext.RouteData.Values.ContainsKey("action") &&
        ViewContext.RouteData.Values["controller"]!.ToString()!.Equals("Home", StringComparison.OrdinalIgnoreCase) &&
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Index", StringComparison.OrdinalIgnoreCase);

        var userActive = ViewContext.RouteData.Values.ContainsKey("controller") && ViewContext.RouteData.Values.ContainsKey("action") &&
        ViewContext.RouteData.Values["controller"]!.ToString()!.Equals("User", StringComparison.OrdinalIgnoreCase) &&
        (
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Index", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Edit", StringComparison.OrdinalIgnoreCase)
        );


        var categoryIndexActive = ViewContext.RouteData.Values.ContainsKey("controller") && ViewContext.RouteData.Values.ContainsKey("action") &&
        ViewContext.RouteData.Values["controller"]!.ToString()!.Equals("Category", StringComparison.OrdinalIgnoreCase) &&
        (
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Index", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Details", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Create", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Edit", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Delete", StringComparison.OrdinalIgnoreCase)
        );

        var postActive = ViewContext.RouteData.Values.ContainsKey("controller") && ViewContext.RouteData.Values.ContainsKey("action") &&
        ViewContext.RouteData.Values["controller"]!.ToString()!.Equals("Post", StringComparison.OrdinalIgnoreCase) &&
        (
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Index", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Details", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Create", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Edit", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Delete", StringComparison.OrdinalIgnoreCase)
        );

        var commentActive = ViewContext.RouteData.Values.ContainsKey("controller") && ViewContext.RouteData.Values.ContainsKey("action") &&
        ViewContext.RouteData.Values["controller"]!.ToString()!.Equals("Comment", StringComparison.OrdinalIgnoreCase) &&
        (
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Index", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Details", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Create", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Edit", StringComparison.OrdinalIgnoreCase) ||
        ViewContext.RouteData.Values["action"]!.ToString()!.Equals("Delete", StringComparison.OrdinalIgnoreCase)
        );
    }

    <!-- Nav Item - Dashboard -->
    <li class="nav-item @(dashboardActive ? "active" : "")">
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            @if (User.IsInRole("Admin"))
            {
                <span>Dashboard</span>
            }
            else
            {
                <span>Home</span>
            }
        </a>
    </li>

    @if (!SignInManager.IsSignedIn(User))
    {
        <li class="nav-item @(registerActive ? "active" : "")">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">
                <i class="fa-solid fa-user-plus fa-xs me-1"></i>
                <span>Register</span>
            </a>
        </li>
        <li class="nav-item @(loginActive ? "active" : "")">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">
                <i class="fa-solid fa-user fa-xs me-1"></i>
                <span>Login</span>
            </a>
        </li>
    }

    @if (User != null && User.Identity!.IsAuthenticated)
    {
        <!-- Heading -->
        <div class="sidebar-heading">Pages</div>

        <!-- Nav Item - Pages Collapse Menu -->
        @if (User.IsInRole("Admin"))
        {
            <!-- Users -->
            <li class="nav-item @(userActive ? "active" : "")">
                <a class="nav-link" asp-area="" asp-controller="User" asp-action="Index">
                    <i class="fa-solid fa-users fa-xs me-1"></i>
                    <span>Users</span>
                </a>
            </li>

            <!-- Categories -->
            <li class="nav-item @(categoryIndexActive ? "active" : "")">
                <a class="nav-link" asp-area="" asp-controller="Category" asp-action="Index">
                    <i class="fa-solid fa-folder fa-xs me-1"></i>
                    <span>Categories</span>
                </a>
            </li>
        }

        <!-- Posts -->
        <li class="nav-item @(postActive ? "active" : "")">
            <a class="nav-link" asp-area="" asp-controller="Post" asp-action="Index">
                <i class="fa-solid fa-book fa-xs me-1"></i>
                <span>Posts</span>
            </a>
        </li>

        <!-- Comments -->
        <li class="nav-item @(commentActive ? "active" : "")">
            <a class="nav-link" asp-area="" asp-controller="Comment" asp-action="Index">
                <i class="fa-solid fa-comment fa-xs me-1"></i>
                <span>Comments</span>
            </a>
        </li>
    }

    @*
    <li class="nav-item">
    <a class="nav-link collapsed"
    href="#"
    data-toggle="collapse"
    data-target="#collapseTwo"
    aria-expanded="true"
    aria-controls="collapseTwo">
    <i class="fas fa-fw fa-cog"></i>
    <span>Components</span>
    </a>
    <div id="collapseTwo"
    class="collapse"
    aria-labelledby="headingTwo"
    data-parent="#accordionSidebar">
    <div class="bg-white py-2 collapse-inner rounded">
    <h6 class="collapse-header">Custom Components:</h6>
    <a class="collapse-item" href="buttons.html">Buttons</a>
    <a class="collapse-item" href="cards.html">Cards</a>
    </div>
    </div>
    </li> *@

    <!-- Divider -->
    <hr class="sidebar-divider d-none d-md-block" />

    <!-- Sidebar Toggler (Sidebar) -->
    <div class="text-center d-none d-md-inline">
        <button class="rounded-circle border-0" id="sidebarToggle"></button>
    </div>
</ul>

<!-- End of Sidebar -->