@inject UserManager<UserModel> _userManager
@inject RoleManager<IdentityRole> _roleManager

@model IEnumerable<UserModel>

@{
    ViewData["Title"] = "Index";
}

<form method="get" action="@Url.Action("Index")">
    <div class="mb-4 d-flex justify-content-between">
        <div class="col-md-4">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search..." aria-label="Search" aria-describedby="basic-addon2" name="search" autocomplete="off">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search fa-sm"></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="form-group d-flex">
            <select class="form-control" name="roleFilter">
                <option value="">All Roles</option>
                @foreach (var role in _roleManager.Roles.Select(r => r.Name))
                {
                    <option value="@role">@role</option>
                }
            </select>
            <button class="btn btn-primary ml-2" type="submit">Filter</button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    @foreach (var roleName in await _userManager.GetRolesAsync(user))
                    {
                        <span class="badge badge-info">@roleName</span>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-warning btn-sm"><i class="fa-solid fa-pencil text-light"></i></a>
                    <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger btn-sm text-light"><i class="fa-solid fa-trash"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination links -->
<div class="pagination">
    @if (ViewData["TotalPages"] != null && (int)ViewData["TotalPages"] > 1)
    {
        for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
        {
            <a href="@Url.Action("Index", new { page = i, search = ViewData["Search"] })" class="btn btn-sm @(i == (int)ViewData["CurrentPage"] ? "btn-primary" : "btn-light")">@i</a>
        }
    }
</div>
